---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-loadgen
data:
  config.yaml: |
  {%- if loadGenerator is defined %}
    {{ loadGenerator  }}
  {%- endif %}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-loadgen-scaler
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgen-scaler
    spec:
      serviceAccountName: loadgen-scaler
      containers:
      - name: prom-load-generator
        image: gcr.io/prometheus-test-204522/prometheus-bench-loadgen:v0.1.0
        imagePullPolicy: Always
        args:
        - "scaler"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/loadgen
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-loadgen
      nodeSelector:
        isolation: none
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-loadgen-querier
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgen-querier
    spec:
      containers:
      - name: prom-load-generator
        image: gcr.io/prometheus-test-204522/prometheus-bench-loadgen:v0.1.0
        imagePullPolicy: Always
        args:
        - "querier"
        {%- for p in loadGenerator.querier.targets %}
        - "{{ environ(p.name) }}"
        {%- endfor %}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/loadgen
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-loadgen
      nodeSelector:
        isolation: none
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-loadgen-querier
  labels:
    app: loadgen-querier
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: prometheus
    port: 8080
  selector:
    app: loadgen-querier