apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-meta
  labels:
    app: prometheus-meta
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      prometheus: meta
  template:
    metadata:
      labels:
        app: prometheus
        prometheus: meta
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - prometheus
      securityContext:
        runAsUser: 0
      containers:
      - image: quay.io/prometheus/prometheus:v2.0.0
        args:
        - "--config.file=/etc/prometheus/config/prometheus.yaml"
        - "--storage.tsdb.path=/data"
        - "--storage.tsdb.min-block-duration=15m"
        - "--storage.tsdb.max-block-duration=4h"
        name: prometheus
        resources:
          requests:
            cpu: 200m
            memory: 2Gi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/config
        - name: instance-ssd
          mountPath: /data
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-meta
      - name: instance-ssd
        hostPath:
          # /mnt is where GKE keeps it's SSD
          # don't change this if you want Prometheus to take advantage of these local SSDs
          path: /mnt/disks/ssd0
      terminationGracePeriodSeconds: 300
      nodeSelector:
        cloud.google.com/gke-local-ssd: "true"
        isolation: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-meta
  labels:
    prometheus: meta
    app: prometheus
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: prometheus
    port: 9090
  selector:
    app: prometheus
    prometheus: meta
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-meta
data:
  prometheus.yaml: |
    global:
      scrape_interval: 5s
    scrape_configs:
    - job_name: kubelet
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
    - job_name: cadvisor
      metrics_path: /metrics/cadvisor
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
    # Scrapes the endpoint lists for the main Prometheus endpoints
    - job_name: endpoints
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_service_label_app]
        regex: prometheus|node-exporter|loadgen-querier
      - action: replace
        source_labels: [__meta_kubernetes_service_label_app]
        target_label: job
      - action: replace
        target_label: prometheus
        source_labels: [__meta_kubernetes_service_label_prometheus]