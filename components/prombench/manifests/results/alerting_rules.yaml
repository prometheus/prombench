apiversion: v1
kind: ConfigMap
metadata:
  name: alerting-rules
data:
  alert.rules: |
    groups:
    - name: memory
      rules:
      - alert: NodeMemoryUsage
        #namespace and node filters are used to get metrics only from those node-exporters
        #running on nodes where prometheus-servers are being benchmarked
        expr: ((avg_over_time(process_resident_memory_bytes{job="prometheus",namespace=~"prombench-[[:digit:]]+",prometheus=~"test-pr-.+"}[5m])
          - on(namespace) avg_over_time(process_resident_memory_bytes{job="prometheus",namespace=~"prombench-[[:digit:]]+",prometheus=~"test-[^pr-].+"}[5m])) 
          / on (namespace) avg_over_time(process_resident_memory_bytes{job="prometheus",namespace=~"prombench-[[:digit:]]+",prometheus=~"test-[^pr-].+"}[5m])*100)
          > 15
        for: 2m
        annotations:
          issue: '{{"{{"}}$labels.namespace{{"}}"}}'
          description: 'PR:{{"{{"}}$labels.namespace{{"}}"}} is using 15% more RAM than the release (current value is: {{"{{"}}$value{{"}}"}})'
          summary: 'High memory usage detected'

    - name: cpu
      rules:
      - alert: NodeCPUUsage
        expr: ((rate(process_cpu_seconds_total{job="prometheus",namespace=~"prombench-[[:digit:]]+",prometheus=~"test-pr-.+"}[5m]) 
          - on(namespace) rate(process_cpu_seconds_total{job="prometheus",namespace=~"prombench-[[:digit:]]+",prometheus=~"test-[^pr-].+"}[5m]) ) 
          / on (namespace) rate(process_cpu_seconds_total{job="prometheus",namespace=~"prombench-[[:digit:]]+",prometheus=~"test-[^pr-].+"}[5m])*100)
          > 15
        for: 2m
        annotations:
          issue: '{{"{{"}}$labels.namespace{{"}}"}}'
          description: 'PR:{{"{{"}}$labels.namespace{{"}}"}} is using 15% more CPU time than the release (current value is: {{"{{"}}$value{{"}}"}})'
          summary: 'High memory usage detected'